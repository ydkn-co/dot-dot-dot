name: Continuous Integration and Deployment

on:
  pull_request:
  push:
    branches:
      - main

env:
  CI: true

jobs:
  cache-keys:
    name: Setup – Cache keys
    runs-on: ubuntu-latest

    outputs:
      build: build-${{ steps.build.outputs.hash }}-v1
      node-modules: node-modules-${{ steps.node-modules.outputs.hash }}-v1

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - id: build
        run: echo "::set-output name=hash::${{ hashFiles('src/**', '**/package.json', '**/pnpm-lock.yaml') }}"

      - id: node-modules
        run: echo "::set-output name=hash::${{ hashFiles('**/pnpm-lock.yaml') }}"

  install-dependencies:
    name: Install dependencies
    needs: cache-keys
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Get cached dependencies
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: |
            node_modules
          key: ${{ needs.cache-keys.outputs.node-modules }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.21.0

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: lts/fermium
          cache: pnpm

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        name: Install dependencies
        run: pnpm install

  build:
    name: Build
    needs: [cache-keys, install-dependencies]
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.21.0

      - name: Get cached dependencies
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: |
            node_modules
          key: ${{ needs.cache-keys.outputs.node-modules }}

      - name: Get cached build
        id: cached-build
        uses: actions/cache@v2
        with:
          path: |
            dist
          key: ${{ needs.cache-keys.outputs.build }}

      - if: steps.cached-build.outputs.cache-hit != 'true'
        name: Build
        run: pnpm run build

  test-unit:
    name: Test – Unit
    needs: [cache-keys, install-dependencies]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.21.0

      - name: Get cached dependencies
        uses: actions/cache@v2
        with:
          path: |
            node_modules
          key: ${{ needs.cache-keys.outputs.node-modules }}

      - name: Run unit tests
        run: pnpm run test

  deploy:
    name: Deploy
    needs: [cache-keys, install-dependencies, build, test-unit]
    if: |
      always() &&
      (needs.build.result == 'success' || needs.build.result == 'skipped') &&
      (needs.test-unit.result == 'success' || needs.test-unit.result == 'skipped')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.21.0

      - name: Get cached build
        uses: actions/cache@v2
        with:
          path: |
            dist
          key: ${{ needs.cache-keys.outputs.build }}

      - name: Deploy to preview environment
        if: github.ref != 'refs/heads/main'
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          working-directory: ./dist
          alias-domains: pr-{{PR_NUMBER}}.indeed.wesrice.com

      - name: Deploy to production environment
        if: github.ref == 'refs/heads/main'
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: --prod
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          working-directory: ./dist
